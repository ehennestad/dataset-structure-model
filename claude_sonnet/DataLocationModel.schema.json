{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "DataLocationModel",
  "description": "Schema for a flexible data location model that manages configurations for organizing and accessing hierarchical data structures",
  "type": "object",
  "required": ["Data", "Preferences"],
  "properties": {
    "Data": {
      "type": "array",
      "description": "Array of data location items",
      "items": {
        "$ref": "#/definitions/DataLocationItem"
      }
    },
    "Preferences": {
      "type": "object",
      "description": "User preferences for the DataLocationModel",
      "required": ["DefaultDataLocation", "SourceID"],
      "properties": {
        "DefaultDataLocation": {
          "type": "string",
          "description": "UUID of the default data location"
        },
        "SourceID": {
          "type": "string",
          "description": "Computer name identifier of the source system"
        }
      }
    }
  },
  "definitions": {
    "DataLocationItem": {
      "type": "object",
      "required": ["displayName", "identifier", "category", "storagePaths", "pathTemplate", "hierarchyDefinition", "metadataExtractors"],
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Human-readable name of the data location"
        },
        "identifier": {
          "type": "string",
          "description": "Unique identifier for the data location"
        },
        "category": {
          "type": "string",
          "description": "Category of the data location defining its role in the data lifecycle",
          "enum": ["raw", "processed", "derived", "imported", "reference", "temporary", "archive", "custom"],
          "default": "raw"
        },
        "storagePaths": {
          "type": "array",
          "description": "Array of storage path configurations for different environments",
          "items": {
            "$ref": "#/definitions/StoragePathItem"
          }
        },
        "pathTemplate": {
          "type": "string",
          "description": "Template path showing the expected structure with placeholders (e.g., '{rootPath}/{subject}/{session}')"
        },
        "hierarchyDefinition": {
          "type": "array",
          "description": "Definition of the hierarchical folder structure",
          "items": {
            "$ref": "#/definitions/HierarchyLevelItem"
          }
        },
        "metadataExtractors": {
          "type": "array",
          "description": "Definitions for extracting metadata from paths",
          "items": {
            "$ref": "#/definitions/MetadataExtractorItem"
          }
        },
        "additionalFolders": {
          "type": "array",
          "description": "Optional additional folders within the hierarchy",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "description": "Optional tags for categorizing or filtering data locations",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "description": "Optional detailed description of the data location's purpose"
        },
        "customProperties": {
          "type": "object",
          "description": "Optional custom properties for domain-specific extensions"
        }
      }
    },
    "StoragePathItem": {
      "type": "object",
      "required": ["pathId", "locationPath"],
      "properties": {
        "pathId": {
          "type": "string",
          "description": "Unique identifier for the storage path"
        },
        "locationPath": {
          "type": "string",
          "description": "Actual file system path"
        },
        "volumeName": {
          "type": "string",
          "description": "Name of the disk/volume where the path is located"
        },
        "storageType": {
          "type": "string",
          "description": "Type of storage medium",
          "enum": ["local", "external", "network", "cloud", "removable", "virtual"],
          "default": "local"
        },
        "environment": {
          "type": "string",
          "description": "Computing environment this path is valid for (e.g., 'windows-lab', 'mac-home')"
        },
        "priority": {
          "type": "integer",
          "description": "Priority order when multiple valid paths exist (lower number = higher priority)",
          "minimum": 1
        },
        "isAvailable": {
          "type": "boolean",
          "description": "Whether this storage location is currently available",
          "default": true
        }
      }
    },
    "HierarchyLevelItem": {
      "type": "object",
      "required": ["levelName", "entityType", "matchPattern", "excludePatterns"],
      "properties": {
        "levelName": {
          "type": "string",
          "description": "Name of this hierarchy level (e.g., 'subjects', 'sessions')"
        },
        "entityType": {
          "type": "string",
          "description": "Type of entity this level represents (e.g., 'subject', 'session', 'recording')",
          "examples": ["subject", "session", "recording", "experiment", "dataset", "run", "scan"]
        },
        "matchPattern": {
          "type": "string",
          "description": "Regular expression pattern for matching valid folders at this level"
        },
        "excludePatterns": {
          "type": "array",
          "description": "Patterns for folders to exclude at this level",
          "items": {
            "type": "string"
          }
        },
        "isRequired": {
          "type": "boolean",
          "description": "Whether this level must exist in the hierarchy",
          "default": true
        },
        "isVariable": {
          "type": "boolean",
          "description": "Whether this level can have variable names (true) or has a fixed name (false)",
          "default": true
        },
        "fixedName": {
          "type": "string",
          "description": "Fixed folder name if isVariable is false"
        },
        "metadataMapping": {
          "type": "object",
          "description": "Mapping between folder name patterns and metadata values"
        }
      }
    },
    "MetadataExtractorItem": {
      "type": "object",
      "required": ["metadataField", "extractionMethod"],
      "properties": {
        "metadataField": {
          "type": "string",
          "description": "Name of the metadata field to extract (e.g., 'subjectId', 'sessionDate')"
        },
        "hierarchyLevel": {
          "type": ["integer", "null"],
          "description": "Index of the hierarchy level containing this metadata (0-based)"
        },
        "extractionMethod": {
          "type": "string",
          "description": "Method for extracting the metadata value",
          "enum": ["substring", "regex", "function", "template", "fixed"]
        },
        "extractionPattern": {
          "type": "string",
          "description": "Pattern for extraction (indices, regex pattern, or template)"
        },
        "valueFormat": {
          "type": "string",
          "description": "Format specification for parsing the extracted value (e.g., date format)"
        },
        "extractorFunction": {
          "type": "string",
          "description": "Name of function to call for extracting metadata"
        },
        "defaultValue": {
          "type": "string",
          "description": "Default value to use if extraction fails"
        },
        "dataType": {
          "type": "string",
          "description": "Expected data type of the extracted value",
          "enum": ["string", "number", "date", "time", "datetime", "boolean"]
        },
        "validation": {
          "type": "object",
          "description": "Validation rules for the extracted value",
          "properties": {
            "pattern": {
              "type": "string",
              "description": "Regex pattern the value must match"
            },
            "minLength": {
              "type": "integer",
              "description": "Minimum length for string values"
            },
            "maxLength": {
              "type": "integer",
              "description": "Maximum length for string values"
            }
          }
        }
      }
    },
    "PathTemplate": {
      "type": "object",
      "required": ["template"],
      "properties": {
        "template": {
          "type": "string",
          "description": "Template string with placeholders (e.g., '{rootPath}/{subject}/{session}')"
        },
        "placeholders": {
          "type": "object",
          "description": "Definitions for template placeholders",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string",
                "description": "Source of the placeholder value (e.g., 'metadata', 'constant')"
              },
              "value": {
                "type": "string",
                "description": "Value or reference for the placeholder"
              }
            }
          }
        }
      }
    }
  },
  "examples": [
    {
      "Data": [
        {
          "displayName": "Two-Photon Recordings",
          "identifier": "550e8400-e29b-41d4-a716-446655440000",
          "category": "raw",
          "storagePaths": [
            {
              "pathId": "550e8400-e29b-41d4-a716-446655440001",
              "locationPath": "D:\\Data\\2P_Recordings",
              "volumeName": "DataDrive",
              "storageType": "external",
              "environment": "windows-lab",
              "priority": 1,
              "isAvailable": true
            },
            {
              "pathId": "550e8400-e29b-41d4-a716-446655440002",
              "locationPath": "/Volumes/DataDrive/2P_Recordings",
              "volumeName": "DataDrive",
              "storageType": "external",
              "environment": "mac-analysis",
              "priority": 1,
              "isAvailable": true
            }
          ],
          "pathTemplate": "{rootPath}/{subject}/{session}",
          "hierarchyDefinition": [
            {
              "levelName": "subjects",
              "entityType": "subject",
              "matchPattern": "^[A-Za-z0-9]+$",
              "excludePatterns": ["temp", "test"],
              "isRequired": true,
              "isVariable": true
            },
            {
              "levelName": "sessions",
              "entityType": "session",
              "matchPattern": "^[A-Za-z0-9_-]+$",
              "excludePatterns": [],
              "isRequired": true,
              "isVariable": true
            }
          ],
          "metadataExtractors": [
            {
              "metadataField": "subjectId",
              "hierarchyLevel": 0,
              "extractionMethod": "substring",
              "extractionPattern": "1:end",
              "valueFormat": "",
              "extractorFunction": "myproject.datalocation.getSubjectId",
              "dataType": "string"
            },
            {
              "metadataField": "sessionId",
              "hierarchyLevel": 1,
              "extractionMethod": "substring",
              "extractionPattern": "1:end",
              "valueFormat": "",
              "extractorFunction": "myproject.datalocation.getSessionId",
              "dataType": "string"
            },
            {
              "metadataField": "experimentDate",
              "hierarchyLevel": null,
              "extractionMethod": "function",
              "extractionPattern": "",
              "valueFormat": "yyyyMMdd",
              "extractorFunction": "myproject.datalocation.getExperimentDate",
              "dataType": "date"
            },
            {
              "metadataField": "experimentTime",
              "hierarchyLevel": null,
              "extractionMethod": "function",
              "extractionPattern": "",
              "valueFormat": "HHmmss",
              "extractorFunction": "myproject.datalocation.getExperimentTime",
              "dataType": "time"
            }
          ],
          "additionalFolders": ["raw", "processed"],
          "tags": ["imaging", "two-photon", "calcium"],
          "description": "Raw two-photon calcium imaging recordings",
          "customProperties": {
            "microscope": "Bruker",
            "imagingDepth": "cortical layer 2/3"
          }
        },
        {
          "displayName": "Processed Imaging Data",
          "identifier": "550e8400-e29b-41d4-a716-446655440003",
          "category": "processed",
          "storagePaths": [
            {
              "pathId": "550e8400-e29b-41d4-a716-446655440004",
              "locationPath": "D:\\Data\\Processed",
              "volumeName": "DataDrive",
              "storageType": "external",
              "environment": "windows-lab",
              "priority": 1
            }
          ],
          "pathTemplate": "{rootPath}/{subject}/{session}/processed",
          "hierarchyDefinition": [
            {
              "levelName": "subjects",
              "entityType": "subject",
              "matchPattern": "^[A-Za-z0-9]+$",
              "excludePatterns": [],
              "isRequired": true,
              "isVariable": true
            },
            {
              "levelName": "sessions",
              "entityType": "session",
              "matchPattern": "^[A-Za-z0-9_-]+$",
              "excludePatterns": [],
              "isRequired": true,
              "isVariable": true
            },
            {
              "levelName": "processed",
              "entityType": "dataType",
              "matchPattern": "^processed$",
              "excludePatterns": [],
              "isRequired": true,
              "isVariable": false,
              "fixedName": "processed"
            }
          ],
          "metadataExtractors": [
            {
              "metadataField": "subjectId",
              "hierarchyLevel": 0,
              "extractionMethod": "substring",
              "extractionPattern": "1:end",
              "dataType": "string"
            },
            {
              "metadataField": "sessionId",
              "hierarchyLevel": 1,
              "extractionMethod": "substring",
              "extractionPattern": "1:end",
              "dataType": "string"
            }
          ],
          "tags": ["processed", "motion-corrected"]
        }
      ],
      "Preferences": {
        "DefaultDataLocation": "550e8400-e29b-41d4-a716-446655440000",
        "SourceID": "DESKTOP-ABC123"
      }
    }
  ]
}
